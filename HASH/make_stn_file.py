"""makes station and station reversal file for HASHauth. talongi"""import pandas as pdimport numpy as npimport redef split_into_deg_min(string):    """splits a coordinate into degrees, minutes format"""    degree, minute = re.split('[NSEW]', string)    return degree, minutedef deg_min2dec_deg(deg, minute):    """combines back into a decimal degree reading"""    dec = float(minute) / 60 #fraction of a minute     dec_deg = int(deg) + dec    return dec_deg    #load datanames = ('stn', 'lat', 'lon', 'elev', 'a','b','c')stn_file = '/Users/travisalongi/Cascadia/Data_tables/Stations/STNS'df = pd.read_csv(stn_file,                  sep = '\s+',                  names = names)df = df.sort_values('stn')s_file = open('casc.stations', mode = 'w')rev_file = open('casc.reverse', mode = 'w')# some parameters that may need to be fudged later    elev = '250' #metersnetwork = 'CI'for index, row in df.iterrows():    sta = row.stn        lat_string = row.lat    lat_deg, lat_min = split_into_deg_min(lat_string)    lat = deg_min2dec_deg(lat_deg, lat_min)        lon_string = row.lon    lon_deg, lon_min = split_into_deg_min(lon_string)    lon = deg_min2dec_deg(lon_deg, lon_min)    elev = row.elev        if len(sta) > 4:        sta = sta[:-1]        print(sta, type(sta))    #format the stations file & write    fmt_str = '{: <5}HHZ{:33}{:9.5f} {:10.5f} {:>5}{:23}{:2}'.format(sta,                                                                      ' ',                                                                     float(lat),                                                                     float(-lon),                                                                      elev,                                                                     '',                                                                     network)    s_file.write(fmt_str + '\n')        #format reversal file & write    if sta[:2] == 'CM':        rev_str = '{:<5}20140801 20151201'.format(sta)        rev_file.write(rev_str + '\n')    else:        rev_str = '{: <5}{:<8} {:<8}'.format(sta, '0', '0')        rev_file.write(rev_str + '\n')s_file.close()rev_file.close()#%%for i,L in enumerate(fmt_str):    print(i+1, L)